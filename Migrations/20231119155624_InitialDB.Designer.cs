// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _3_Asp.Net_MVC.Models;

#nullable disable

namespace _3_Asp.Net_MVC.Migrations
{
    [DbContext(typeof(ShoppingDBContext))]
    [Migration("20231119155624_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            ID = new Guid("0c522152-5a19-42d8-84ce-76514ce25ae8"),
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2023, 11, 19, 22, 56, 24, 320, DateTimeKind.Local).AddTicks(9105),
                            PhoneNumber = "0943665884",
                            Recipient = "Nguyễn Văn A",
                            Status = 0,
                            UserID = new Guid("d76b97a6-9e9c-460e-8930-69fffea6a1e8")
                        },
                        new
                        {
                            ID = new Guid("ada30208-3268-47a7-aa35-d59486ebb6b2"),
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2023, 11, 19, 22, 56, 24, 320, DateTimeKind.Local).AddTicks(9119),
                            PhoneNumber = "0998568984",
                            Recipient = "Nguyễn Văn A",
                            Status = 0,
                            UserID = new Guid("d76b97a6-9e9c-460e-8930-69fffea6a1e8")
                        },
                        new
                        {
                            ID = new Guid("bf80ab36-d28f-472a-98ab-e1b7d2d79d5e"),
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2023, 11, 19, 22, 56, 24, 320, DateTimeKind.Local).AddTicks(9123),
                            PhoneNumber = "0345278984",
                            Recipient = "Nguyễn Văn A",
                            Status = 0,
                            UserID = new Guid("1b49d058-582a-4f3a-ae38-2f715bf75156")
                        },
                        new
                        {
                            ID = new Guid("05be279c-15db-435c-9805-a578222b46c5"),
                            Address = "Hà Nội",
                            CreateDate = new DateTime(2023, 11, 19, 22, 56, 24, 320, DateTimeKind.Local).AddTicks(9126),
                            PhoneNumber = "0879875384",
                            Recipient = "Nguyễn Văn A",
                            Status = 1,
                            UserID = new Guid("1b49d058-582a-4f3a-ae38-2f715bf75156")
                        });
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.BillDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BillID");

                    b.HasIndex("ProductID");

                    b.ToTable("BillDetails");

                    b.HasData(
                        new
                        {
                            ID = new Guid("64c1a8aa-2339-487f-ac07-d09423781bf6"),
                            BillID = new Guid("0c522152-5a19-42d8-84ce-76514ce25ae8"),
                            Price = 300000L,
                            ProductID = new Guid("0b4eada7-5c76-4561-a680-f3933f3482d5"),
                            Quantity = 2
                        },
                        new
                        {
                            ID = new Guid("b5e25ec7-d760-46f5-9578-d8322e437f32"),
                            BillID = new Guid("0c522152-5a19-42d8-84ce-76514ce25ae8"),
                            Price = 450000L,
                            ProductID = new Guid("fa31a855-ced2-4574-a720-154fe3380f63"),
                            Quantity = 1
                        },
                        new
                        {
                            ID = new Guid("4efe695d-a602-4cf7-b50c-4c0da4c84524"),
                            BillID = new Guid("ada30208-3268-47a7-aa35-d59486ebb6b2"),
                            Price = 650000L,
                            ProductID = new Guid("d4648b5a-cce8-465a-a83b-4523e2b1fe86"),
                            Quantity = 1
                        },
                        new
                        {
                            ID = new Guid("5ef2af34-55d5-4cdf-89d8-283c87df13f2"),
                            BillID = new Guid("bf80ab36-d28f-472a-98ab-e1b7d2d79d5e"),
                            Price = 350000L,
                            ProductID = new Guid("fa31a855-ced2-4574-a720-154fe3380f63"),
                            Quantity = 2
                        },
                        new
                        {
                            ID = new Guid("7e9d8ae1-321b-414d-a157-c638a061749c"),
                            BillID = new Guid("bf80ab36-d28f-472a-98ab-e1b7d2d79d5e"),
                            Price = 650000L,
                            ProductID = new Guid("b3c41a23-2b05-4101-81fe-36eeac9a2695"),
                            Quantity = 2
                        },
                        new
                        {
                            ID = new Guid("f85f7fec-df10-4f43-9fec-e9c3726707b0"),
                            BillID = new Guid("05be279c-15db-435c-9805-a578222b46c5"),
                            Price = 350000L,
                            ProductID = new Guid("d4648b5a-cce8-465a-a83b-4523e2b1fe86"),
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.CartDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("CartDetails");

                    b.HasData(
                        new
                        {
                            ID = new Guid("5fc96e34-ea45-40b0-b655-f044e773771d"),
                            ProductID = new Guid("48990401-d56c-4272-9694-bd672f7484c2"),
                            Quantity = 1,
                            UserID = new Guid("d76b97a6-9e9c-460e-8930-69fffea6a1e8")
                        },
                        new
                        {
                            ID = new Guid("1b76af66-0132-451d-8c2c-284b3ebfafc6"),
                            ProductID = new Guid("0b4eada7-5c76-4561-a680-f3933f3482d5"),
                            Quantity = 2,
                            UserID = new Guid("d76b97a6-9e9c-460e-8930-69fffea6a1e8")
                        });
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = new Guid("9d47c1cb-c7d9-42c5-8654-4585f2f796e2"),
                            Description = "Áo",
                            Name = "Áo",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d9275424-8cf1-4f51-8bc4-fb08112d99cb"),
                            Description = "Quần",
                            Name = "Quần ",
                            Status = 1
                        });
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TypeName")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = new Guid("fa31a855-ced2-4574-a720-154fe3380f63"),
                            AvailableQuantity = 45,
                            Description = "Áo polo lịch sự",
                            Image = "product-8.jpg",
                            Price = 300000L,
                            ProductName = "Áo polo",
                            Size = "S",
                            Status = 1,
                            TypeName = new Guid("9d47c1cb-c7d9-42c5-8654-4585f2f796e2")
                        },
                        new
                        {
                            ID = new Guid("b3c41a23-2b05-4101-81fe-36eeac9a2695"),
                            AvailableQuantity = 89,
                            Description = "Áo kaki ấm có cổ, khóa kéo",
                            Image = "product-2.jpg",
                            Price = 450000L,
                            ProductName = "Áo khoác kaki",
                            Size = "L",
                            Status = 1,
                            TypeName = new Guid("9d47c1cb-c7d9-42c5-8654-4585f2f796e2")
                        },
                        new
                        {
                            ID = new Guid("d4648b5a-cce8-465a-a83b-4523e2b1fe86"),
                            AvailableQuantity = 59,
                            Description = "Áo phông mát mẻ, co dãn 4 chiều",
                            Image = "product-5.jpg",
                            Price = 250000L,
                            ProductName = "Áo phông họa tiết trừu tượng",
                            Size = "S",
                            Status = 1,
                            TypeName = new Guid("9d47c1cb-c7d9-42c5-8654-4585f2f796e2")
                        },
                        new
                        {
                            ID = new Guid("48990401-d56c-4272-9694-bd672f7484c2"),
                            AvailableQuantity = 78,
                            Description = "Áo polo mát mẻ, co dãn 4 chiều",
                            Image = "product-15.jpg",
                            Price = 350000L,
                            ProductName = "Áo polo kẻ rộng",
                            Size = "M",
                            Status = 1,
                            TypeName = new Guid("9d47c1cb-c7d9-42c5-8654-4585f2f796e2")
                        },
                        new
                        {
                            ID = new Guid("d5ac8261-5791-403b-b7ba-27d9ca0d7b04"),
                            AvailableQuantity = 59,
                            Description = "Áo kaki ấm có cổ, khóa kéo",
                            Image = "product-12.jpg",
                            Price = 650000L,
                            ProductName = "Áo khoác kaki họa tiết",
                            Size = "M",
                            Status = 1,
                            TypeName = new Guid("9d47c1cb-c7d9-42c5-8654-4585f2f796e2")
                        },
                        new
                        {
                            ID = new Guid("0b4eada7-5c76-4561-a680-f3933f3482d5"),
                            AvailableQuantity = 59,
                            Description = "Áo kaki ấm có cổ, khóa kéo",
                            Image = "product-4.jpg",
                            Price = 650000L,
                            ProductName = "Áo khoác kaki họa tiết 1",
                            Size = "M",
                            Status = 1,
                            TypeName = new Guid("9d47c1cb-c7d9-42c5-8654-4585f2f796e2")
                        });
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7a715fa6-026b-4fb2-9d2b-ad76cbe421b8"),
                            Description = "Admin",
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9d47c1cb-c7d9-42c5-8654-4585f2f673e0"),
                            Description = "Khách mua hàng dùng tài khoản",
                            RoleName = "Khách hàng",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c2a00f0f-263f-4f15-b0de-3924fd81c451"),
                            Description = "Khách mua hàng không có tài khoản",
                            RoleName = "Khách vãng lai",
                            Status = 1
                        });
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("5fc96e34-ea45-40b0-b655-f044e773771d"),
                            Email = "admin123@gmail.com",
                            Password = "Admin123",
                            RoleID = new Guid("7a715fa6-026b-4fb2-9d2b-ad76cbe421b8"),
                            Status = 1,
                            UserName = "Admin123"
                        },
                        new
                        {
                            ID = new Guid("d76b97a6-9e9c-460e-8930-69fffea6a1e8"),
                            Email = "customer123@gmail.com",
                            Password = "Customer123",
                            RoleID = new Guid("9d47c1cb-c7d9-42c5-8654-4585f2f673e0"),
                            Status = 1,
                            UserName = "Customer123"
                        },
                        new
                        {
                            ID = new Guid("1b49d058-582a-4f3a-ae38-2f715bf75156"),
                            RoleID = new Guid("c2a00f0f-263f-4f15-b0de-3924fd81c451"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Bill", b =>
                {
                    b.HasOne("_3_Asp.Net_MVC.Models.User", "User")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.BillDetail", b =>
                {
                    b.HasOne("_3_Asp.Net_MVC.Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_3_Asp.Net_MVC.Models.Product", "Product")
                        .WithMany("BillDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.CartDetail", b =>
                {
                    b.HasOne("_3_Asp.Net_MVC.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_3_Asp.Net_MVC.Models.User", null)
                        .WithMany("CartDetails")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Product", b =>
                {
                    b.HasOne("_3_Asp.Net_MVC.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.User", b =>
                {
                    b.HasOne("_3_Asp.Net_MVC.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Product", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("_3_Asp.Net_MVC.Models.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CartDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
